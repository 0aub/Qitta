# Kubernetes Deployment Configuration
# Phase 4.4b: Comprehensive Health Checks and Readiness Probes
# Production-ready deployment with health monitoring

apiVersion: apps/v1
kind: Deployment
metadata:
  name: browser-automation-service
  labels:
    app: browser-automation
    version: v2.0.0
    component: web-scraping
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: browser-automation
  template:
    metadata:
      labels:
        app: browser-automation
        version: v2.0.0
    spec:
      containers:
      - name: browser-automation
        image: browser-automation:v2.0.0
        ports:
        - containerPort: 8004
          name: http
        - containerPort: 9090
          name: metrics

        # Environment Configuration
        env:
        - name: DEPLOYMENT_ENVIRONMENT
          value: "production"
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        - name: LOG_LEVEL
          value: "INFO"
        - name: MIN_WORKERS
          value: "2"
        - name: MAX_WORKERS
          value: "8"
        - name: MAX_CONCURRENT_JOBS
          value: "50"
        - name: STEALTH_LEVEL
          value: "aggressive"
        - name: PROMETHEUS_ENABLED
          value: "true"
        - name: API_KEY_REQUIRED
          value: "true"
        - name: RATE_LIMITING_ENABLED
          value: "true"

        # Resource Limits
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"

        # Liveness Probe - Basic health check
        livenessProbe:
          httpGet:
            path: /health
            port: 8004
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3

        # Readiness Probe - Comprehensive readiness check
        readinessProbe:
          httpGet:
            path: /ready
            port: 8004
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3

        # Startup Probe - For slow-starting containers
        startupProbe:
          httpGet:
            path: /health
            port: 8004
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 12  # 60 seconds total

        # Volume Mounts
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: data
          mountPath: /app/data
        - name: tmp
          mountPath: /tmp

        # Security Context
        securityContext:
          runAsNonRoot: false  # Playwright needs root for browser
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
            add:
            - SYS_ADMIN  # Required for browser sandboxing

      # Volumes
      volumes:
      - name: logs
        emptyDir: {}
      - name: data
        emptyDir: {}
      - name: tmp
        emptyDir: {}

      # Pod Security
      securityContext:
        fsGroup: 1000

      # DNS Configuration
      dnsPolicy: ClusterFirst

      # Restart Policy
      restartPolicy: Always

---
# Service Configuration
apiVersion: v1
kind: Service
metadata:
  name: browser-automation-service
  labels:
    app: browser-automation
spec:
  type: ClusterIP
  ports:
  - port: 8004
    targetPort: 8004
    protocol: TCP
    name: http
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: metrics
  selector:
    app: browser-automation

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: browser-automation-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: browser-automation-service
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: browser-automation-pdb
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: browser-automation

---
# Network Policy (Optional - for security)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: browser-automation-network-policy
spec:
  podSelector:
    matchLabels:
      app: browser-automation
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090
  - from: []
    ports:
    - protocol: TCP
      port: 8004
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: redis
    ports:
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443